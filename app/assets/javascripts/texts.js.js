// Generated by CoffeeScript 1.6.2
$(document).ready(function() {
  var ajax_request, element, getTextNodes, setRange;

  setRange = function(event) {
    var endset, new_end, offset, range, test, textNode;

    if (document.caretPositionFromPoint) {

    } else if (document.caretRangeFromPoint) {
      range = document.caretRangeFromPoint(event.pageX, event.pageY);
      textNode = range.startContainer;
      offset = range.startOffset;
      endset = offset + 10;
      range.setStart(textNode, offset);
      range.setEnd(textNode, endset);
      test = range.toString();
      new_end = ajax_request(test);
      console.log("" + new_end);
      if (new_end !== 0) {
        new_end = new_end + offset;
        return range.setEnd(textNode, new_end);
      }
    }
  };
  ajax_request = function(text) {
    return $.ajax({
      url: '/search',
      data: {
        query: text
      },
      type: "POST",
      success: function(resp) {
        var test;

        if (resp.code === 0) {
          console.log("Nothing found");
          return 0;
        } else if (resp.code === 2) {
          test = resp.offset_add;
          console.log("Highlighted: " + resp.query + "   Additional Offset: " + resp.offset_add + "   Definition: " + resp.def);
          return test;
        }
      }
    });
  };
  element = document.getElementById("content");
  element.addEventListener('mousemove', setRange, true);
  return getTextNodes = function(node) {
    var child, children, i, textNodes, _i, _len, _results;

    textNodes = [];
    if (node.nodeType === 3) {
      return textNodes.push(node);
    } else {
      children = node.childNodes;
      _results = [];
      for (i = _i = 0, _len = children.length; _i < _len; i = _i += 1) {
        child = children[i];
        _results.push(textNodes.push.call(textNodes, getTextNodes(child)));
      }
      return _results;
    }
  };
});
