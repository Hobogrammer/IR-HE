// Generated by CoffeeScript 1.6.2
$(document).ready(function() {
  var element, highlight, mecabAjax, mechAjax, oldOffset, setRange;

  oldOffset = 0;
  mechAjax = function(mecabResp) {
    return $.ajax({
      url: '/dic',
      data: {
        query: mecabResp.word
      },
      type: "POST",
      success: function(mechResp) {
        if (mechResp.code === 0) {
          console.log("nothing from yahoo");
          return 0;
        } else {
          $('.popover-content').replaceWith(mechResp.def);
          return console.log("Word: " + mechResp.word + "   Definition: " + mechResp.def);
        }
      }
    });
  };
  highlight = function(range, mecabresponse) {
    var new_end, sel;

    if (mecabresponse.offset_add !== 0) {
      new_end = mecabresponse.offset_add + range.startOffset;
      range.setEnd(range.startContainer, new_end);
      sel = window.getSelection();
      sel.removeAllRanges();
      sel.addRange(range);
      return mechAjax(mecabresponse);
    }
  };
  mecabAjax = function(event, range) {
    var word;

    $('#content').popover('destroy');
    word = range.toString();
    $('#content').popover({
      placement: 'mouse',
      coorX: event.pageX,
      coorY: event.pageY,
      html: true,
      title: 'test',
      content: "<img src='/assets/ajax-loader.gif'>",
      trigger: 'focus'
    }).popover('show');
    return $.ajax({
      url: '/search',
      data: {
        query: word
      },
      type: "POST",
      success: function(mecabResp) {
        if (mecabResp.word === false) {
          console.log("negative from mecab");
          return 0;
        } else {
          return highlight(range, mecabResp);
        }
      }
    });
  };
  setRange = function(event, highlight) {
    var endset, offset, range, textNode;

    if (document.caretPositionFromPoint) {

    } else if (document.caretRangeFromPoint) {
      console.log("oldOffset: " + oldOffset);
      range = document.caretRangeFromPoint(event.pageX, event.pageY);
      textNode = range.startContainer;
      offset = range.startOffset;
      if (offset !== oldOffset) {
        oldOffset = offset;
        endset = offset + 10;
        range.setStart(textNode, offset);
        range.setEnd(textNode, endset);
        return mecabAjax(event, range);
      }
    }
  };
  element = document.getElementById("content");
  return element.addEventListener('mousemove', setRange, true);
});
